# Default values for users-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: vladraven/otus_users_service
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.7"
  containerPort: "5003"
  dbConnectionStringEnvName: ConnectionStrings__DefaultConnection
  redisConnectionStringEnvName: ConnectionStrings__RedisConnection
  authServiceUrlEnvName: ServicesUris__AuthService

redis:
  url: "shared-keyring-redis" #ip

ravendb:
  label: users-ravendb
  host: users-ravendb
  intport: "8080"
  extport: "9011"
  serviceType: ClusterIP

authService:
  url: "auth-service"
  port: "9001"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "users-service"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 9002

ingress:
  enabled: true
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/auth-url: "http://auth-service.default.svc.cluster.local:9001/auth"
    nginx.ingress.kubernetes.io/auth-signin: "http://$host/otusapp/login"
    nginx.ingress.kubernetes.io/auth-response-headers: "X-UserId"
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: arch.homework
      paths: [ "/otusapp/users($|/)(.*)" ]
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
